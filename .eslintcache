[{"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\index.js":"1","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\AppContext.js":"2","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\App.js":"3","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\progressFunction.js":"4","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\NavBar\\index.js":"5","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\1.Login_Page\\index.js":"6","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\2.Welcome_Page\\index.js":"7","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\8.Stats_Page\\index.js":"8","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\4.Journal_Entry_Page\\index.js":"9","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\7.Trophy_Page\\index.js":"10","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\5.Journal_View_Page\\index.js":"11","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\3.Emotions_Page\\index.js":"12","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\6.Timeline_Page\\index.js":"13","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\1b.Profile_Page\\index.js":"14","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\Buttons\\LogInButton\\index.js":"15","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\7.Trophy_Page\\Trophies.js":"16","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\3.Emotions_Page\\quotesData.js":"17","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\Input\\DateInput\\index.js":"18","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\6.Timeline_Page\\congratsData.js":"19","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\ProgressBar\\themeContext.js":"20","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\ProgressBar\\index.js":"21","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\Buttons\\TrophyButton\\index.js":"22","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\Buttons\\LogOutButton\\index.js":"23","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\Buttons\\SubmitButton\\index.js":"24","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\DisplayText\\H2Text\\index.js":"25","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\DisplayText\\H1Text\\index.js":"26","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\Buttons\\EmotionsButtons\\index.js":"27","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\ProgressBar\\theme.js":"28"},{"size":570,"mtime":1609342021913,"results":"29","hashOfConfig":"30"},{"size":663,"mtime":1609273041565,"results":"31","hashOfConfig":"30"},{"size":2747,"mtime":1609757336705,"results":"32","hashOfConfig":"30"},{"size":1854,"mtime":1609273041577,"results":"33","hashOfConfig":"30"},{"size":2744,"mtime":1609242723868,"results":"34","hashOfConfig":"30"},{"size":331,"mtime":1609342021882,"results":"35","hashOfConfig":"30"},{"size":460,"mtime":1608631273414,"results":"36","hashOfConfig":"30"},{"size":235,"mtime":1608631273421,"results":"37","hashOfConfig":"30"},{"size":5675,"mtime":1609756900908,"results":"38","hashOfConfig":"30"},{"size":544,"mtime":1609273041570,"results":"39","hashOfConfig":"30"},{"size":286,"mtime":1608631532829,"results":"40","hashOfConfig":"30"},{"size":1912,"mtime":1609342021887,"results":"41","hashOfConfig":"30"},{"size":1181,"mtime":1609342021893,"results":"42","hashOfConfig":"30"},{"size":3537,"mtime":1609342021884,"results":"43","hashOfConfig":"30"},{"size":260,"mtime":1609342021896,"results":"44","hashOfConfig":"30"},{"size":1307,"mtime":1609242723861,"results":"45","hashOfConfig":"30"},{"size":1096,"mtime":1608633140891,"results":"46","hashOfConfig":"30"},{"size":1054,"mtime":1609342021909,"results":"47","hashOfConfig":"30"},{"size":2428,"mtime":1609273041567,"results":"48","hashOfConfig":"30"},{"size":3929,"mtime":1609273041575,"results":"49","hashOfConfig":"30"},{"size":11708,"mtime":1609242723870,"results":"50","hashOfConfig":"30"},{"size":720,"mtime":1609342021902,"results":"51","hashOfConfig":"30"},{"size":303,"mtime":1609342021898,"results":"52","hashOfConfig":"30"},{"size":314,"mtime":1609342021900,"results":"53","hashOfConfig":"30"},{"size":107,"mtime":1609342021907,"results":"54","hashOfConfig":"30"},{"size":105,"mtime":1609342021904,"results":"55","hashOfConfig":"30"},{"size":353,"mtime":1609242732050,"results":"56","hashOfConfig":"30"},{"size":364,"mtime":1609342021910,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1ed2wfj",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\index.js",[],["121","122"],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\AppContext.js",["123"],"import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { progressPosition } from './progressFunction';\r\n\r\nconst AppContext = createContext(null);\r\n\r\nexport function AppProvider({ children }) {\r\n  const [currentWeek, setCurrentWeek] = useState('week1');\r\n  let startDate = 'Oct 22 2020';\r\n\r\n  useEffect(() => {\r\n    let week = progressPosition(startDate);\r\n    setCurrentWeek(week);\r\n  }, []);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        currentWeek: currentWeek,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\App.js",["124"],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\progressFunction.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\NavBar\\index.js",["125","126","127","128","129"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport EmojiEventsRoundedIcon from '@material-ui/icons/EmojiEventsRounded';\r\nimport MultilineChartRoundedIcon from '@material-ui/icons/MultilineChartRounded';\r\nimport ScheduleRoundedIcon from '@material-ui/icons/ScheduleRounded';\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\nimport DehazeRoundedIcon from '@material-ui/icons/DehazeRounded';\r\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\r\nimport MoreVertRoundedIcon from '@material-ui/icons/MoreVertRounded';\r\nimport MoreHorizRoundedIcon from '@material-ui/icons/MoreHorizRounded';\r\nimport FaceRoundedIcon from '@material-ui/icons/FaceRounded';\r\n\r\n// Do we want to use badges to tell them if theyve unlocked nay trophies or timeline events?\r\n// Would be pretty cool\r\n// Bottom Naviagation acts differently on android and ios\r\n// Badeges such as how many email on the icon?\r\n\r\n// Whe want to be able to use a Nav Bar to navigate through our App\r\n// IOS the NavBar is at the Bottom of the Page\r\n// Android NavBar is at the Top of the Page\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 500,\r\n  },\r\n});\r\n\r\nexport default function NavBar() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      showLabels\r\n      className={classes.root}\r\n    >\r\n      \r\n      <BottomNavigationAction label=\"Profile\" icon={<FaceRoundedIcon />} />\r\n      <BottomNavigationAction label=\"Journal\" icon={<EditRoundedIcon />} />\r\n      <BottomNavigationAction label=\"TimeLine\" icon={<ScheduleRoundedIcon />} />\r\n      <BottomNavigationAction label=\"Trophies\" icon={<EmojiEventsRoundedIcon />} />\r\n      <BottomNavigationAction icon={<MenuRoundedIcon  />} />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n\r\n// Removed Nav Icons - think I wil make a dropdown menu\r\n/* <BottomNavigationAction label=\"Emotions\" icon={<FavoriteIcon />} />\r\n<BottomNavigationAction label=\"Stats\" icon={<MultilineChartRoundedIcon />} />\r\n */\r\n\r\n/* <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n  Open Menu\r\n</Button>\r\n<Menu\r\n  id=\"simple-menu\"\r\n  anchorEl={anchorEl}\r\n  keepMounted\r\n  open={Boolean(anchorEl)}\r\n  onClose={handleClose}\r\n>\r\n  <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n  <MenuItem onClick={handleClose}>My account</MenuItem>\r\n  <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n</Menu> */","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\1.Login_Page\\index.js",["130"],"import React from 'react';\r\nimport LoginButton from '../Buttons/LogInButton/index';\r\nimport LogInButton from '../Buttons/LogInButton/index';\r\n\r\nfunction LogIn() {\r\n  return (\r\n    <div>\r\n      <h1>Welcome to your SoC Journal</h1>\r\n      <p>INCLUDE SOC LOGO</p>\r\n      <LoginButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\2.Welcome_Page\\index.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\8.Stats_Page\\index.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\4.Journal_Entry_Page\\index.js",["131","132","133","134"],"import React, { useState, useEffect } from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport './journal.css';\r\n\r\n//this will need to link to user iD\r\nconst userId = 1;\r\n\r\nexport default function JournalEntry() {\r\n  // Code to hold the states of each input...\r\n  const [text, setText] = useState('');\r\n  const [imgUpload, setImgUpload] = useState('');\r\n  const [vidUpload, setVidUpload] = useState('');\r\n  const [audioUpload, setAudioUpload] = useState('');\r\n\r\n  // These states hold the super long DataURL strings of the file...\r\n  const [previewImgSource, setPreviewImgSource] = useState();\r\n  const [previewVidSource, setPreviewVidSource] = useState();\r\n  const [previewAudioSource, setPreviewAudioSource] = useState();\r\n\r\n  const handleImageInputChange = (e) => {\r\n    // Storing input value into a variable...\r\n    const imgFile = e.target.files[0];\r\n    // Preview function to show the img /vid /audio file that has been selected for upload.\r\n    previewImage(imgFile);\r\n  };\r\n\r\n  const handleVideoInputChange = (e) => {\r\n    const videoFile = e.target.files[0];\r\n    previewVideo(videoFile);\r\n  };\r\n\r\n  const handleAudioInputChange = (e) => {\r\n    const audioFile = e.target.files[0];\r\n    previewAudio(audioFile);\r\n  };\r\n\r\n  const previewImage = (imgFile) => {\r\n    //This section show the user what file they have selected by creating a reader...\r\n    const reader = new FileReader(); // (nb. this is a built in javascript api)\r\n    reader.readAsDataURL(imgFile); // then converts img into a DataURL / string\r\n    reader.onloadend = () => {\r\n      setPreviewImgSource(reader.result);\r\n      // The previewImgSource state will now be able to display the uploaded file when used at the bottom of the return code.\r\n    };\r\n  };\r\n\r\n  const previewVideo = (videoFile) => {\r\n    //show the user what they have selected by creating a reader...\r\n    const reader = new FileReader(); // this is a built in javascript api\r\n    reader.readAsDataURL(videoFile); // converts img into a URL / string\r\n    reader.onloadend = () => {\r\n      setPreviewVidSource(reader.result);\r\n    };\r\n  };\r\n\r\n  const previewAudio = (audioFile) => {\r\n    //show the user what they have selected by creating a reader...\r\n    const reader = new FileReader(); // this is a built in javascript api\r\n    reader.readAsDataURL(audioFile); // converts img into a URL / string\r\n    reader.onloadend = () => {\r\n      setPreviewAudioSource(reader.result);\r\n    };\r\n  };\r\n\r\n  // function to submit the text and uploaded file's to the server...\r\n  const handleSubmitFile = (e) => {\r\n    console.log('submitting');\r\n    e.preventDefault();\r\n    postJournalEntry(\r\n      userId,\r\n      text,\r\n      previewImgSource,\r\n      previewVidSource,\r\n      previewAudioSource\r\n    );\r\n  };\r\n\r\n  async function postJournalEntry(\r\n    userId,\r\n    text,\r\n    previewImgSource,\r\n    previewVidSource,\r\n    previewAudioSource\r\n  ) {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/posts`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          user_id: userId,\r\n          text: text,\r\n          image: previewImgSource,\r\n          video: previewVidSource,\r\n          audio: previewAudioSource,\r\n        }),\r\n        headers: { 'content-type': 'application/JSON' },\r\n      });\r\n\r\n      console.log(res);\r\n\r\n      const data = await res.json();\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <h1>How was your day today?</h1>\r\n      <h1>What did you learn?</h1>\r\n      <div className='container'>\r\n        <form onSubmit={handleSubmitFile}>\r\n          <h2>Create post:</h2>\r\n          <h2>{text}</h2>\r\n          <input\r\n            type='text'\r\n            name='text'\r\n            onChange={(event) => setText(event.target.value)}\r\n            value={text}\r\n            className='form-input'\r\n          />\r\n          <br></br>\r\n          <label for='img'>Select image:</label>\r\n          <input\r\n            type='file'\r\n            name='image'\r\n            accept='image/*'\r\n            onChange={handleImageInputChange}\r\n            value={imgUpload}\r\n            className='form-input'\r\n          />\r\n          <br></br>\r\n          <label for='video'>Select video:</label>\r\n          <input\r\n            type='file'\r\n            name='video'\r\n            accept='video/*'\r\n            onChange={handleVideoInputChange}\r\n            value={vidUpload}\r\n            className='form-input'\r\n          />\r\n          <br></br>\r\n          <label for='audio'>Select audio:</label>\r\n          <input\r\n            type='file'\r\n            name='audio'\r\n            accept='audio/*'\r\n            onChange={handleAudioInputChange}\r\n            value={audioUpload}\r\n            className='form-input'\r\n          />\r\n          <button className='btn' type='submit'>\r\n            Submit\r\n          </button>\r\n        </form>\r\n        <br></br>\r\n        {/* Media Upload previews for image, video and audio player */}\r\n        {previewImgSource && (\r\n          <img\r\n            src={previewImgSource}\r\n            alt='chosenImg'\r\n            style={{ width: '70%' }}\r\n          />\r\n        )}\r\n        <br></br>\r\n        {previewVidSource && (\r\n          <video\r\n            src={previewVidSource}\r\n            alt='chosenVideo'\r\n            style={{ width: '70%' }}\r\n            controls\r\n          />\r\n        )}\r\n        {previewAudioSource && (\r\n          <ReactAudioPlayer\r\n            src={previewAudioSource}\r\n            alt='chosenAudio'\r\n            style={{ width: '70%' }}\r\n            autoplay\r\n            controls\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\7.Trophy_Page\\index.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\5.Journal_View_Page\\index.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\3.Emotions_Page\\index.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\6.Timeline_Page\\index.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\1b.Profile_Page\\index.js",["135","136","137"],"import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DatePicker from '../Input/DateInput/index.js';\r\nimport H1 from '../DisplayText/H1Text';\r\nimport H2 from '../DisplayText/H2Text';\r\nimport SubmitButton from '../Buttons/SubmitButton/index';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Profile() {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [myersBriggs, setMyersBriggs] = useState('');\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [submit, setSubmit] = useState(null);\r\n  const { user, isAuthenticated, isLoading } = useAuth0();\r\n\r\n  console.log(user.name);\r\n  console.log(user.email);\r\n  console.log(user.picture);\r\n\r\n  function handleSubmit() {\r\n    setSubmit(true);\r\n    console.log('submit hit');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (submit) {\r\n      console.log(submit);\r\n      async function postprofile() {\r\n        const res = await fetch(\r\n          // neeed to actual API address\r\n          `http://localhost:5000/users`,\r\n          {\r\n            method: 'POST',\r\n            headers: { 'content-type': 'application/JSON' },\r\n            body: JSON.stringify({\r\n              name: name,\r\n              email: user.email,\r\n              password: 'password',\r\n              personality: myersBriggs,\r\n              start_date: selectedDate,\r\n              points: 0,\r\n            }),\r\n          }\r\n        );\r\n        const data = await res.json();\r\n        console.log(data);\r\n      }\r\n      postprofile();\r\n      setSubmit(null);\r\n    }\r\n  }, [submit]);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading ...</div>;\r\n  }\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <div>\r\n        <H1 text={'Profile'}></H1>\r\n        <img className=\"profile-pic\" src={user.picture} alt={user.name} />\r\n        <H2 text={`Hi ${user.name}, Welcome to your Profile Page, please add your Myers-Briggs and Start Date`} />\r\n        <form className={classes.root} noValidate autoComplete='off'>\r\n          <div>\r\n          <TextField\r\n              id='outlined-search'\r\n              label='Name'\r\n              type='text'\r\n              variant='outlined'\r\n              onChange={(event) => {\r\n                const { value } = event.target;\r\n                setName(value);\r\n              }}\r\n            />\r\n            <TextField\r\n              id='outlined-search'\r\n              label='Myers-Briggs'\r\n              type='text'\r\n              variant='outlined'\r\n              onChange={(event) => {\r\n                const { value } = event.target;\r\n                setMyersBriggs(value);\r\n              }}\r\n            />\r\n            <DatePicker values={selectedDate} handleDate={setSelectedDate} />\r\n            <SubmitButton handleClick={handleSubmit} />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n\r\n// name and email for profile login \r\n\r\n/* <TextField\r\nid='outlined-search'\r\nlabel='Name'\r\ntype='text'\r\nvariant='outlined'\r\nonChange={(event) => {\r\n  const { value } = event.target;\r\n  setName(value);\r\n}}\r\n/>\r\n<TextField\r\nid='outlined-search'\r\nlabel='Email'\r\ntype='email'\r\nvariant='outlined'\r\nonChange={(event) => {\r\n  const { value } = event.target;\r\n  setEmail(value);\r\n}}\r\n/> */","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\Buttons\\LogInButton\\index.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\7.Trophy_Page\\Trophies.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\3.Emotions_Page\\quotesData.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\Input\\DateInput\\index.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\6.Timeline_Page\\congratsData.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\ProgressBar\\themeContext.js",["138"],"import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { themeSwitch } from './theme';\r\nimport { useAppContext } from '../../AppContext';\r\n\r\nconst ThemeContext = createContext(themeSwitch.light);\r\n\r\nexport function ThemeProvider({ children }) {\r\n  const [week1, setweek1] = useState(false);\r\n  const [week2, setweek2] = useState(false);\r\n  const [week3, setweek3] = useState(false);\r\n  const [week4, setweek4] = useState(false);\r\n  const [week5, setweek5] = useState(false);\r\n  const [week6, setweek6] = useState(false);\r\n  const [week7, setweek7] = useState(false);\r\n  const [week8, setweek8] = useState(false);\r\n  const [week9, setweek9] = useState(false);\r\n  const [week10, setweek10] = useState(false);\r\n  const [week11, setweek11] = useState(false);\r\n  const [week12, setweek12] = useState(false);\r\n  const [week16, setweek16] = useState(false);\r\n  const { currentWeek } = useAppContext();\r\n\r\n  useEffect(() => {\r\n    if (\r\n      currentWeek === 'week13' ||\r\n      currentWeek === 'week14' ||\r\n      currentWeek === 'week15'\r\n    ) {\r\n      setweek16(true);\r\n    } else if (currentWeek === 'week11') {\r\n      setweek12(true);\r\n      setweek16(true);\r\n    } else if (currentWeek === 'week10') {\r\n      setweek11(true);\r\n      setweek12(true);\r\n      setweek16(true);\r\n    } else if (currentWeek === 'week9') {\r\n      setweek10(true);\r\n      setweek11(true);\r\n      setweek12(true);\r\n      setweek16(true);\r\n    } else if (currentWeek === 'week8') {\r\n      setweek9(true);\r\n      setweek10(true);\r\n      setweek11(true);\r\n      setweek12(true);\r\n      setweek16(true);\r\n    } else if (currentWeek === 'week7') {\r\n      setweek8(true);\r\n      setweek9(true);\r\n      setweek10(true);\r\n      setweek11(true);\r\n      setweek12(true);\r\n      setweek16(true);\r\n    } else if (currentWeek === 'week6') {\r\n      setweek7(true);\r\n      setweek8(true);\r\n      setweek9(true);\r\n      setweek10(true);\r\n      setweek11(true);\r\n      setweek12(true);\r\n      setweek16(true);\r\n    } else if (currentWeek === 'week5') {\r\n      setweek6(true);\r\n      setweek7(true);\r\n      setweek8(true);\r\n      setweek9(true);\r\n      setweek10(true);\r\n      setweek11(true);\r\n      setweek12(true);\r\n      setweek16(true);\r\n    } else if (currentWeek === 'week4') {\r\n      setweek5(true);\r\n      setweek6(true);\r\n      setweek7(true);\r\n      setweek8(true);\r\n      setweek9(true);\r\n      setweek10(true);\r\n      setweek11(true);\r\n      setweek12(true);\r\n      setweek16(true);\r\n    } else if (currentWeek === 'week3') {\r\n      setweek4(true);\r\n      setweek5(true);\r\n      setweek6(true);\r\n      setweek7(true);\r\n      setweek8(true);\r\n      setweek9(true);\r\n      setweek10(true);\r\n      setweek11(true);\r\n      setweek12(true);\r\n      setweek16(true);\r\n    } else if (currentWeek === 'week2') {\r\n      setweek3(true);\r\n      setweek4(true);\r\n      setweek5(true);\r\n      setweek6(true);\r\n      setweek7(true);\r\n      setweek8(true);\r\n      setweek9(true);\r\n      setweek10(true);\r\n      setweek11(true);\r\n      setweek12(true);\r\n      setweek16(true);\r\n    } else if (currentWeek === 'week1') {\r\n      setweek2(true);\r\n      setweek3(true);\r\n      setweek4(true);\r\n      setweek5(true);\r\n      setweek6(true);\r\n      setweek7(true);\r\n      setweek8(true);\r\n      setweek9(true);\r\n      setweek10(true);\r\n      setweek11(true);\r\n      setweek12(true);\r\n      setweek16(true);\r\n    }\r\n  }, [currentWeek]);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        week1: week1,\r\n        week2: week2,\r\n        week3: week3,\r\n        week4: week4,\r\n        week5: week5,\r\n        week6: week6,\r\n        week7: week7,\r\n        week8: week8,\r\n        week9: week9,\r\n        week10: week10,\r\n        week11: week11,\r\n        week12: week12,\r\n        week16: week16,\r\n      }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useThemeContext() {\r\n  return useContext(ThemeContext);\r\n}\r\n","C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\ProgressBar\\index.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\Buttons\\TrophyButton\\index.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\Buttons\\LogOutButton\\index.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\Buttons\\SubmitButton\\index.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\DisplayText\\H2Text\\index.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\DisplayText\\H1Text\\index.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\Buttons\\EmotionsButtons\\index.js",[],"C:\\Users\\schoolofcode\\soc\\week_13\\final_project\\front-end-final-project-agileavengers\\src\\Components\\ProgressBar\\theme.js",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":13,"column":6,"nodeType":"145","endLine":13,"endColumn":8,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":13,"column":8,"nodeType":"149","messageId":"150","endLine":13,"endColumn":14},{"ruleId":"147","severity":1,"message":"151","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":20},{"ruleId":"147","severity":1,"message":"152","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":33},{"ruleId":"147","severity":1,"message":"153","line":10,"column":8,"nodeType":"149","messageId":"150","endLine":10,"endColumn":25},{"ruleId":"147","severity":1,"message":"154","line":12,"column":8,"nodeType":"149","messageId":"150","endLine":12,"endColumn":27},{"ruleId":"147","severity":1,"message":"155","line":13,"column":8,"nodeType":"149","messageId":"150","endLine":13,"endColumn":28},{"ruleId":"147","severity":1,"message":"156","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":19},{"ruleId":"147","severity":1,"message":"157","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":36},{"ruleId":"147","severity":1,"message":"158","line":11,"column":21,"nodeType":"149","messageId":"150","endLine":11,"endColumn":33},{"ruleId":"147","severity":1,"message":"159","line":12,"column":21,"nodeType":"149","messageId":"150","endLine":12,"endColumn":33},{"ruleId":"147","severity":1,"message":"160","line":13,"column":23,"nodeType":"149","messageId":"150","endLine":13,"endColumn":37},{"ruleId":"147","severity":1,"message":"161","line":22,"column":10,"nodeType":"149","messageId":"150","endLine":22,"endColumn":15},{"ruleId":"147","severity":1,"message":"162","line":22,"column":17,"nodeType":"149","messageId":"150","endLine":22,"endColumn":25},{"ruleId":"143","severity":1,"message":"163","line":63,"column":6,"nodeType":"145","endLine":63,"endColumn":14,"suggestions":"164"},{"ruleId":"147","severity":1,"message":"165","line":8,"column":17,"nodeType":"149","messageId":"150","endLine":8,"endColumn":25},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'startDate'. Either include it or remove the dependency array.","ArrayExpression",["168"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'FavoriteIcon' is defined but never used.","'MultilineChartRoundedIcon' is defined but never used.","'DehazeRoundedIcon' is defined but never used.","'MoreVertRoundedIcon' is defined but never used.","'MoreHorizRoundedIcon' is defined but never used.","'LogInButton' is defined but never used.","'useEffect' is defined but never used.","'setImgUpload' is assigned a value but never used.","'setVidUpload' is assigned a value but never used.","'setAudioUpload' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'myersBriggs', 'name', 'selectedDate', and 'user.email'. Either include them or remove the dependency array.",["169"],"'setweek1' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [startDate]",{"range":"174","text":"175"},"Update the dependencies array to be: [myersBriggs, name, selectedDate, submit, user.email]",{"range":"176","text":"177"},[420,422],"[startDate]",[1863,1871],"[myersBriggs, name, selectedDate, submit, user.email]"]